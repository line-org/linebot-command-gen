// auto generated by https://github.com/line-org/linebot-command-gen
// DO NOT EDIT

package commands

import (
	"github.com/line-org/lineall/lineapp/service/line"
	"github.com/line-org/protection-bot/bot"
	"github.com/line-org/protection-bot/users"
)

type CommandHandler interface {
	{{- range $index, $cmd := .Cmds}}
	{{$cmd.GetUpperId}}(bot *bot.ProtectionBot, msg *line.Message, cmd *ParsedCmd) {{- end}}
}
type CommandData struct {
	Cmds map[string]*CommandInfo
}
// CommandInfo github.com/line-org/protection-bot/bot 用の構造体
type CommandInfo struct {
	ID       string
	Level    users.UserLevel
	BaseText string
	SubTexts map[string]struct{}
	Help     struct {
		Ja string
		En string
		ExampleUsages []string
	}
	Genre    CmdGenre
	TargetParam bool
	Function func(bot *bot.ProtectionBot, msg *line.Message, cmd *ParsedCmd)
}

func NewCommandDatas(handler CommandHandler) *CommandData {
	por := &CommandData{}
	por.Cmds = map[string]*CommandInfo{}
    {{- range $index, $cmd := .Cmds}}
	por.Cmds["{{$cmd.GetLowerUpperID}}"] = &CommandInfo{
		ID:       "{{$cmd.GetLowerUpperID}}", Level:    {{$cmd.Level.ToUserLevel}}, BaseText: "{{$cmd.BaseText}}",
		SubTexts: getSubTexts({{$cmd.ToSubTextStr}}),
		Help: struct {Ja string;En string;ExampleUsages []string}{Ja: "{{$cmd.Help.Ja}}", En: "{{$cmd.Help.En}}", ExampleUsages: {{$cmd.ToExampleUsagesStr}},
		Genre:    "{{$cmd.Genre}}",Function: handler.{{$cmd.GetUpperId}},
		TargetParam: {{$cmd.TargetParam}},
	}{{- end}}
	return por
}

func getSubTexts(subs []string) map[string]struct{} {
	mapVal := map[string]struct{}{}
	for _, sub := range subs {
		mapVal[sub] = struct{}{}
	}
	return mapVal
}
