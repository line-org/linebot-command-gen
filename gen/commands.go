// auto generated by https://github.com/line-org/linebot-command-gen
// DO NOT EDIT

package commands

import (
	"github.com/line-org/lineall/lineapp/service/line"
	"github.com/line-org/protection-bot/bot"
	"github.com/line-org/protection-bot/users"
)

type CommandHandler interface {
	Speed(bot *bot.ProtectionBot, msg *line.Message, cmd *ParsedCmd)
}
type CommandData struct {
	Cmds map[string]*CommandInfo
}

// CommandInfo github.com/line-org/protection-bot/bot 用の構造体
type CommandInfo struct {
	ID       string
	Level    users.UserLevel
	BaseText string
	SubTexts map[string]struct{}
	Help     struct {
		Ja            string
		En            string
		ExampleUsages []string
	}
	Genre       CmdGenre
	TargetParam bool
	Function    func(bot *bot.ProtectionBot, msg *line.Message, cmd *ParsedCmd)
}

func NewCommandDatas(handler CommandHandler) *CommandData {
	por := &CommandData{}
	por.Cmds = map[string]*CommandInfo{}
	por.Cmds["speed"] = &CommandInfo{
		ID: "speed", Level: 8, BaseText: "speed",
		SubTexts: getSubTexts([]string{`スピード`, `速度`}),
		Help: struct {
			Ja            string
			En            string
			ExampleUsages []string
		}{Ja: "速度を図ります", En: "Measuring speed", ExampleUsages: []string{}},
		Genre: "manage", Function: handler.Speed,
		TargetParam: false,
	}
	return por
}

func getSubTexts(subs []string) map[string]struct{} {
	mapVal := map[string]struct{}{}
	for _, sub := range subs {
		mapVal[sub] = struct{}{}
	}
	return mapVal
}
